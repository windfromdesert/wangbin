Ubuntu 学习

+   Binary packages(二进制软件包)：可以使用dpkg解包

+   Source packages(源码包)：可以使用dpkg-sourcer打包/解码包

+   Ubuntu软件包

        foo_ver-rev_arch.deb

    foo是软件包名称，ver是软件本身的版本号，rev是Ubuntu修订版本号，arch是目标架构名称。如果文件名被修改过，可以通过以下命令来找出文件filename实际是哪个软件包：
        
        dpkg --info filename

    虚拟软件包安装了多个软件，可以使用以下命令指定首选项：

        update-alternatives

    软件包状态

    +   unknown  -  用户并没描述他想对软件包进行什么操作。
    +   install  -  用户希望对软件包进行安装或升级。
    +   remove  -  用户希望删除软件包，但不想删除任何配置文件。
    +   purge  -  用户希望完全删除软件包，包括配置文件。
    +   hold  -  用户希望软件包保持现状，例如，用户希望保持当前的版本，当前的状态，当前的一切。

    阻止软件包升级

        dpkg  --get-selections \*  >  selections.txt

    接着编辑文件selections.txt，修改想要恢复的软件所在的行，例如 libc6，则将：

        libc6 install
        改为：
        libc6 hold
    
    保存文件，将它装入dpkg数据库

        dpkg  --set-selections <  selections.txt
        # 如果你知道要恢复的软件包名称，可以直接执行:
        echo  libc6 hold  |  dpkg --set-selections

    源码包发布在 source 目录中，既可以手工下载，也可以使用如下命令获取它们。

        apt-get source foo

    编译源码包时，需要得全相关文件，并且你安装了dpkg-dev软件包的话

        $  dpkg-source -x  foo_version-revision.dsc
        # 它将软件包解压到一个名为 foo-version 的目录
        $  cd  foo-version
        $  su  -c  "apt-get update  ;  apt-get install fakeroot"
        $  dpkg-buildpackage -rfakeroot -us  -uc
        #  su  -c  "dpkg  -i  ../foo_version-revision_arch.deb"        


# linux 命令

按常用指数索引 P38 (PDF:43 = Page:1)

+   alias

    +   功能说明：设置命令的别名。
    +   语法： alias [-p][别名][=命令]
    +   补充说明：若仅输入alias，则可列出当前所有的别名设置；alias仅作用于该次登录的作业，若要每次登录时都自动设置好别名，请在 .profile(bash) 或 .cshrc(tcsh) 中设置命令的别名。
    +   参数：

        +   -P ：列出当前所有的别名设置
        +   别名：列出指定的别名设置
        +   =命令：设置某个命令的别名

+   bg(background)

    +   功能说明：将程序放在后台执行。
    +   语法： bg [工作编号]
    +   补充说明：功能与命令后加上 '&' 相同。如果没指定编号，会将当前的工作移动后台。查询工作编号，可以使用 jobs 命令；若要将工作移回到前台，则用 fg 命令。
    +   参数：无

+   cat

    +   功能说明：连接多个文件，并将它们的内容输出到标准输出设置
    +   语法： cat [-AbeEnstTuv][--help][--version][文件...]
    +   补充说明：若不指定任何文件名称，或是指定的文件名为 '-' ，则 cat 命令会从标准输入设备读取数据 (例如键盘) ，然后再把所得到的数据输出到输出设备。也可以运用 shell 的特殊字符 '>' 和 '>>' ，把多个文件的内容合并成一个文件。
    +   使用 '>' 是将内容覆盖写操作，使用 '>>' 是将内容追加写操作；
    +   参数：
        
        +   -A 或 --show-all ：效果与同时指定 '-vET' 参数相同；
        +   -b 或 --number-nonblank：列出文件内容时，在所有非空白行的开头标上编号，号码从1开始依次累加；
        +   -e ：效果与同时指定 '-vE' 参数相同；
        +   -E 或 --show-ends ：在每一行的最后标上 '$' 符号；
        +   -n 或 --number ：列出文件内容时，在每一行的开头标上编号，号码从1开始依次累加；
        +   -s 或 --squeeze-blank ：当内容某部分的空白行超过一行以上时，则该处仅以一行空白行显示；
        +   -t ：效果与同时指定 '-vT' 参数相同；
        +   -T 或 --show-tabs ：将制表符 (Tab) 以 '^I' 表示；
        +   -u ：此参数将忽略不予处理，仅负责解决 unix 的相容性问题；
        +   -v 或 --show-nonprinting ：除了换行符 (LFD) 及制表符之外，其他的控制字符皆以 '^' 符号表示，高位字符(十进制字码大于127以上者) 则用 'M-' 表示；
        +   --help ：显示帮助；
        +   --version ：显示版本信息；

+   cd

    +   功能说明：切换目录
    +   语法： cd [目标目录]
    +   示例：
        
            # 因为 program files 中包含有空格，所以要用双引号。
            # cd "/mnt/harddisk/program files"

+   chmod

    +   功能说明：更改文件或目录的权限。
    +   语法1： chmod [-cfRv] [--help] [--version] [<权限范围>+/-/=<权限设置>,...] [文件或目录...] 
    +   语法2： chmod [-cfRv] [--help] [--version] [数字代号] [文件或目录...]
    +   语法3： chmod [-cfRv] [--help] [--reference=<参考文件或目录>] [--version] [数字代号] [文件或目录...]
    +   用 chmod 命令去更改文件或目录的权限，设置方式采用文字或数字代号皆可。符号链接的权限无法更改，如果你对符号链接有修改权限，其改变会作用在被连接的原始文件。
    +   权限范围中的用户文字指定表示：

        +   u ：User，即文件或目录的拥有者；
        +   g ：Group，即文件或目录的所属组；
        +   o ：Other，除了文件或目录的拥有者或所属组之外，其他用户皆属于这个范围。
        +   a ：All，即全部的用户，包含拥有者、所属组，以及其他用户。

    +   权限代号：

        +   r ：读取权限，数字代号为 '4'
        +   w ：写入权限，数字代号为 '2'
        +   x ：执行或切换权限，数字代号为 '1'
        +   - ：不具有任何权限，数字代号为 '0'
        +   s ：特殊权限 SUID 或 SGID，各自表示拥有者和所属组的特殊权限，数字代号分别为 '4' 和 '2' 。对文件而言，应用 SUID 或 SGID 之后，便能任意访问该文件拥有者或所属组权限所及的全部资源。对目录而言，将文件复制到一个套用 SGID 权限的目录里，文件的所属组会重设为该目录的所属组。
        +   t ：特殊权限 Sticky ，数字代号为 '1' 。对一个目录设置这项权限，则存放于此目录中的所有文件或子目录，都只能被该文件或目录的拥有者删除。
    
    +   参数：

        +   -c 或 --changes ：效果类似 '-v' 参数，但仅返回改变的部分；
        +   -f 或 --quiet 或 --silent ：不显示错误信息；
        +   -R 或 --recursive ：递归处理，将指定目录下的所有文件及子目录一并处理。
        +   -v 或 --verbose ：显示命令执行过程；
        +   -help ：显示帮助；
        +   --reference=<参考文件或目录> ：把指定文件或目录的权限，统统设成和参考文件或目录的权限相同；
        +   --version ：显示版本信息；
        +   <权限范围>+<权限设置> ：打开权限范围的文件或目录的该项权限设置；
        +   <权限范围>-<权限设置> ：关闭权限范围的文件或目录的该项权限设置；
        +   <权限范围>=<权限设置> ：指定权限范围的文件或目录的该项权限设置；

                chmod ugo=rw tango      # 指定读写权限
                chmod o-x file          # 取消执行权限
                chmod g+w file          # 加入写权限

+   wget

    +   功能说明：从互联网下载文件；
    +   语法：wget [-bcdFhHkLmNqrsSvVx] [-a <记录文件>] [-A <扩展名>,...] [-B <基础连接>] [-C <on/off>] [-D <领域名称>,...] [-e <执行命令>] [-g <on/off>] [-i <URL 文件>] [-I <目录>,...] [-l <目录层级>] [-nc] [-nd] [-nh] [-nH] [-np] [-nr] [-nv] [-o <记录文件>] [-O <输出文件>] [-P <目录字首字符串>] [-Q <空间限制>] [-R <扩展名>,...] [-t <尝试次数>] [-T <逾时秒数>] [-U <识别标签>] [-w <间隔秒数>] [-X <目录>,...] [-Y <on/off>] [--delete-after] [--dot-style=<显示样式>] [--execlude-domains=<领域名称>,...] [--follow-ftp] [--header=<文件头字符串>] [--http-passwd=<密码>] [--http-user=<用户名称>] [--ignore-length] [--passive-ftp] [--proxy-passwd=<密码>] [--proxy-user=<用户名称>] [--retr-symlinks] [--spider] [URL...]
    +   补充说明： wget 是用来大量抓取网络数据的程序，但不具备互动式操作界面。 wget 支持 HTTP 和 FTP 传输协议，并可在用户未登录系统的状况下于后台中执行，也就是可利用计时器让它在某些时间自行启动下载网络数据。
    +   参数：

        +   -a <记录文件> 或 --append-output=<记录文件>:把信息输出至记录文件内，而非标准输出设备。默认会记录所有命令执行过程，可用参数 '-nv' 让它只输出更新及错误信息；
        +   -A <扩展名> 或 --accept=<扩展名>：设定接受哪些文件的扩展名，两两之间以 ',' 号间隔；
        +   -b 或 --background ：在后台进行下载操作；
        +   -B <基础连接> 或 --base-herf=<基础连接>：设定基本参考的连接地址；
        +   -c 或 --continue ：从上次离开 wget 程序的地方继续下载文件；
        +   -C <on/off> 或 --cache=<on/off> ：开启或关闭服务器数据缓存，默认值为 'on'；
        +   -d 或 --debug ：详细显示命令执行过程，以便于排错；
        +   -D <领域名称> 或 --domains=<领域名称>：设定接受哪些领域名称，两两之间以 ',' 号间隔；
        +   -e <执行命令> 或 --execute=<执行命令>：启动 wget 后就执行该命令，其效果和在 .wgetrc 环境文件中设定执行命令相同；
        +   -F 或 --force-html ：将输入的文件视为HTML格式；
        +   -g <on/off> 或 --glob=<on/off>：开启或关闭FTP通过通配字符下载文件。例如设定欲下载的文件名称为 '*.jpeg'，则会下载所有最后扩展名为 '.jpeg' 的文件；
        +   -h 或 --help ：显示帮助；
        +   -H 或 --span-hosts ：递归处理时，允许跟随连接指向下载数据；
        +   -i <URL 文件> 或 --input-file=<URL 文件>：从指定的文件里读取 URL ；
        +   -I <目录> 或 --include-directories=<目录>：设定接受哪些目录，两两之间以 ',' 号间隔；
        +   -k 或 --convert-links ：把不相关的连接转换成相关连接；
        +   -l <目录层级> 或 --level=<目录层级>：设定递归处理深入目录的最大层级，默认值为5，即从指定的地址开始向下深入5层目录，如设定成0表示没有限制；
        +   -L 或 --relative ：只下载有关联的连接；
        +   -m 或 --mirror ：此参数的效果和同时指定 '-rN' 参数相同；
        +   -nc 或 --no-clobber ：不覆盖已有的文件；
        +   -nd 或 --no-directories ：不建立目录，所有下载的文件都会存放在当前目录中。如果名称重复，则会在文件后面依次加上扩展名 '.1' '.2' '.3' ...；
        +   -nh 或 --no-host-lookup ：不耗费时间在名称服务器上寻找主机；
        +   -nH 或 --no-host-directories ：不建立主机名称的目录；
        +   -np 或 --no-parent ：不下载指定地址的上层目录的数据；
        +   -nr 或 --dont-remove-listing ：不删除 '.listing' 文件；
        +   -nv 或 --non-verbose ：不详细显示命令执行过程，只输出更新及错误信息；
        +   -N 或 --timestamping ：不下载比本地主机的文件更旧的文件。假设远程主机上的文件的异动时间与本地主机的文件相同或更旧，且文件大小相同，则 wget 将不会下载该文件；
        +   -o <记录文件> 或 --output-file=<记录文件>：此参数的效果和指定 '-a' 参数类似，但指定的记录文件若已存在，则 wget 会覆盖该文件，而非仅将信息附加在文件的后面；
        +   -O <输出文件> 或 --output-document=<输出文件>：设定存放输出数据的文件名称，若所给予的文件名为 '-' ，则 wget 命令会把所得到的数据输出至输出设备；
        +   -P <目录首字符串> 或 --directory-prefix=<目录首字符串>：设定目录名称的字首字符串，默认为 '.' 号，就是当前目录；
        +   -q 或 --quiet ：不显示命令执行过程；
        +   -Q <空间限制> 或 --quota=<空间限制>：设定下载数据的磁盘空间限制，单位以 Byte 计算，可以空间限制的后面加上 'K' 或 'M' 字符，表示用 KB 或 MB 计算；
        +   -r 或 --recursive ：递归处理，将指定目录下的所有文件及子目录一起处理；
        +   -R <扩展名> 或 --reject=<扩展名>：设定排除哪些文件的扩展名，两两之间以 ',' 号间隔；
        +   -s 或 --save-headers ：把HTTP的文件头存成文件；
        +   -S 或 --server-response ：列出HTTP或FTP服务器的数据文件头或响应数据；
        +   -t <尝试次数> 或 --tries=<尝试次数>：设定反复尝试的次数，当尝试次数设为0时，则没有次数限制；
        +   -T <逾时秒数> 或 --timeout=<逾时秒数>：设定读取数据的时间限制，单位以秒计算，默认为900秒；
        +   -U <识别标签> 或 --user-agent=<识别标签>：使用自行设定的识别标签，而非默认的 'Wget' 字符串加上其版本编号；
        +   -v 或 --verbose ：显示命令执行过程，此为默认值；
        +   -V 或 --version ：显示版本信息；
        +   -w <间隔秒数> 或 --wait=<间隔秒数>：设定两次下载操作间的间隔时间，单位以秒计算；
        +   -x 或 --force-directories ：强制建立目录；
        +   -X <目录> 或 --exclude-directories=<目录>：设定排除哪些目录，两两之间以 ',' 号间隔；
        +   -Y <on/off> 或 --proxy=<on/off> ：开启或关闭代理服务器，默认为 'on'；
        +   --delete-after ：删除已下载的文件；
        +   --dot-style=<显示样式>：设定下载操作进行时的显示样式；
        +   --execlude-domains=<领域名称>：设定排除哪些领域名称，两两之间以 ',' 号间隔；
        +   --follow-ftp ：从HTML文件中下载FTP连接的文件；
        +   --header=<文件头字符串>：在文件头加入指定的字符串；
        +   --http-passwd=<密码>：设定登录HTTP服务器的密码；
        +   --http-user=<用户名称>：设定登录HTTP服务器的账号；
        +   --ignore-length ：忽略文件头 'Content-Length' 字符串；
        +   --passive-ftp ：使用 PASV 模式连接数据，只有在搭配安全系统而遭遇问题时，才需附加这项参数；
        +   --proxy-passwd=<密码>：设定登录代理服务器的密码；
        +   --proxy-user=<用户名称>：设定登录代理服务器的账号；
        +   --retr-symlinks ：下载FTP的符号链接；
        +   --spider ： 下不载任何数据；

        补充：

        +   --no-check-certificate ：有的资源下载时会提示没有认证不允许下载，此时可使用该选项；
        +   --limit-rate ：指定下载速度，如：wget --limit-rate=300k URL

+   mencoder

    +   合并视频

        +   语法：mencoder [参数选项...] <源文件...> -o <目标文件>
        +   参数：
        
            +   -ovc ：指定视频编码格式，如：x264/lavc/xvid/copy ，如果是 frameno 时表示禁止视频编码；
            +   -lavcopts ：当 -ovc 参数指定为 lavc(Libavcodec) 时，因Libavcodec 包含多种视频编码，所以用此参数指定具体的编码，可选项如下：

                    mjpeg - Motion JPEG
                    h263 - H263
                    h263p - H263 Plus
                    mpeg4 - ISO standard MPEG-4 (DivX 5, XVID compatible)
                    msmpeg4 - pre-standard MPEG-4 variant by MS, v3 (aka DivX3)
                    msmpeg4v2 - pre-standard MPEG-4 by MS, v2 (used in old asf files)
                    wmv1 - Windows Media Video, version 1 (aka WMV7)
                    rv10 - an old RealVideo codec
                    mpeg1video - MPEG1 video :)
                    huffyuv - lossless compression      
                    
                    # sample
                    vcodec=mpeg4:vpass=1:vbitrate=<bitrate>
                    # vpass=1 ：第一次编码
                    # vbitrate ：编码率，数值越大画质越高          
                    # Example for 3-pass encoding:
                    rm frameno.avi - remove this file, which can come from a previous 3-pass encoding (it interferes with current one)
                    mencoder -dvd 2 -ovc frameno -o frameno.avi -oac mp3lame -lameopts vbr=3
                    mencoder -dvd 2 -ovc lavc -lavcopts vcodec=mpeg4:vpass=1 -oac copy -o movie.avi
                    mencoder -dvd 2 -ovc lavc -lavcopts vcodec=mpeg4:vpass=2 -oac copy -o movie.avi
                    

            +   -xvidencopts ：当 -ovc 参数指定为 xvid 时，指定具体的编码格式
            +   -x264encopts ：当 -ovc 参数指定为 x264 时，指定具体的编码格式
            +   -nosound ：编码时禁止音频
            +   pass=1 ：采用 1-pass，即一次编码
            +   -oac ：指定音频编码格式，如：mp3lame/lavc/copy
            +   -lameopts ：当 -oac 为 mp3lame 时指定具体的音频编码，取值如下：
                
                +   aq=7:cbr:br=96 -srate 32000     # 固定码率 cbr
                +   aq=7:abr:br=96 -srate 32000     # 平均码率 abr
                +   aq=7:vol=1.2:vbr=2:q=6 -srate 32000     # 动态码率 vbr
                +   aq ：音频算法，数字越小失真越少，但压缩速度越慢
                +   br ：编码率，数值越大音质越高，上例为96k
                +   -srate ：音频采样率，数值越大清晰度越高
                +   vol ：音量放大，1-10，注意放大过度会造成暴音
                +   -delay <秒数>：音频延迟，负数表示声音提前于视频

            +   -lavcopts ：当 -oac 为 lavc 时指定具体的音频编码，取值如下：

                +   acodec=ac3:abitrate=96 -srate 32000 # AC3平均码率

    +   合并在线视频命令：
    
            # 这晨输出的音频码率为 96k ，可以根据需要调节，或者省略lameopts参数
            mencoder -oac mp3lame -lameopts abr:br=96 -ovc copy 
                -o all.flv input1.flv input2.flv ...
                    
